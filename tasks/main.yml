---
- include: init.yml

- name: Create directory
  file: path={{ directory }} state=directory

- name: Start Elasticsearch docker container
  docker:
    name: elasticsearch
    image: elasticsearch:{{ elasticsearch_version }}
    pull: always
    volumes:
      - "{{ directory }}/data/:/usr/share/elasticsearch/data/"
    state: started
    restart_policy: always

- name: Copy Logstash configuration
  copy: src={{ logstash_configs }}/ dest={{ directory }}/config/logstash/
- name: Copy Logstash SSL key
  copy: src={{ key }} dest={{ directory }}/config/logstash.key
- name: Copy Logstash SSL certificate
  copy: src={{ certificate }} dest={{ directory }}/config/logstash.crt
- name: Start Logstash docker container
  docker:
    name: logstash
    image: mkuzmin/logstash
    volumes:
      - "{{ directory }}/config/logstash/:/opt/logstash/config/:ro"
      - "{{ directory }}/config/logstash.key:/opt/logstash/logstash.key:ro"
      - "{{ directory }}/config/logstash.crt:/opt/logstash/logstash.crt:ro"
    links:
      - "elasticsearch"
    command: -f /opt/logstash/config/
    ports:
      - "5043:5043"
    state: started
    restart_policy: always

- name: Create Kibana configuration directory
  file: path={{ directory }}/config/kibana state=directory
- name: Copy Kibana configuration
  template: src=kibana.yml.j2 dest={{ directory }}/config/kibana/kibana.yml
- name: Start Kibana docker container
  docker:
    name: kibana
    image: kibana:{{ kibana_version }}
    pull: always
    volumes:
      - "{{ directory }}/config/kibana/:/opt/kibana/config/"
    links:
      - "elasticsearch"
    ports:
      - "{{ kibana_port }}:5601"
    state: started
    restart_policy: always
